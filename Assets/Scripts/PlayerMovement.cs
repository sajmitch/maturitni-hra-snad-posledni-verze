using System.Collections;
using UnityEngine;

public class PlayerMovement : MonoBehaviour
{
    public static PlayerMovement Instance { get; private set; }

    [Header("Movement Settings")]
    public float speed = 5f;
    public float jumpForce = 10f;
    public float attackDuration = 1.1f; // D√©lka √∫toku

    [Header("Components")]
    private Rigidbody2D rb;
    private Animator animator;
    private SpriteRenderer spriteRenderer;

    private bool isGrounded = true;
    private bool isAttacking = false;
    private bool attackEndedOnGround = false; // Kontroluje, zda hr√°ƒç dopadl bƒõhem √∫toku

    void Awake()
    {
        if (Instance == null)
        {
            Instance = this;
        }
        else
        {
            Destroy(gameObject);
        }
    }

    void Start()
    {
        rb = GetComponent<Rigidbody2D>();
        animator = GetComponent<Animator>();
        spriteRenderer = GetComponent<SpriteRenderer>();
    }

    void Update()
    {
        float move = Input.GetAxisRaw("Horizontal");

        // **Pohyb hr√°ƒçe (blokov√°n jen na zemi bƒõhem √∫toku)**
        if (!isAttacking || !isGrounded)
        {
            rb.velocity = new Vector2(move * speed, rb.velocity.y);
        }
        else
        {
            rb.velocity = new Vector2(0, rb.velocity.y);
        }

        // **Otoƒçen√≠ hr√°ƒçe**
        if (move > 0) spriteRenderer.flipX = false;
        if (move < 0) spriteRenderer.flipX = true;

        // **Animace bƒõhu (nepokraƒçuje, pokud je √∫tok)**
        if (isGrounded && !isAttacking)
        {
            animator.SetFloat("Speed", Mathf.Abs(move));
        }

        // **Sk√°k√°n√≠ (blokov√°no pouze pokud je hr√°ƒç u≈æ v √∫toku)**
        if (Input.GetKeyDown(KeyCode.Space) && isGrounded && !isAttacking)
        {
            rb.velocity = new Vector2(rb.velocity.x, jumpForce);
            animator.SetTrigger("JumpTrigger");
            isGrounded = false;
            animator.SetBool("isGrounded", false);
        }

        // **√ötok (mo≈æn√Ω i ve vzduchu)**
        if (Input.GetMouseButtonDown(0) && !isAttacking)
        {
            StartCoroutine(Attack());
        }
    }

    // ‚úÖ **Spr√°vn√° Coroutine pro √∫tok**
    private IEnumerator Attack()
    {
        isAttacking = true;
        animator.SetTrigger("AttackTrigger");

        // **P≈ôi √∫toku na zemi hr√°ƒç stoj√≠**
        if (isGrounded)
        {
            rb.velocity = Vector2.zero;
        }

        yield return new WaitForSeconds(attackDuration); // ‚è≥ Poƒçk√°me na konec animace

        // **Pokud hr√°ƒç dopadl bƒõhem √∫toku, zajist√≠ ≈æe stoj√≠**
        if (isGrounded)
        {
            rb.velocity = Vector2.zero;
            yield return new WaitForSeconds(0.2f); // ‚úã Kr√°tk√© zpo≈ædƒõn√≠ pro plynulost
        }

        isAttacking = false;
    }

    // üõ¨ **Detekce kontaktu se zem√≠**
    private void OnCollisionEnter2D(Collision2D collision)
    {
        if (collision.gameObject.CompareTag("Ground"))
        {
            isGrounded = true;
            animator.SetBool("isGrounded", true);

            // **Pokud hr√°ƒç dopadl bƒõhem √∫toku, zajist√≠ ≈æe stoj√≠**
            if (isAttacking)
            {
                rb.velocity = Vector2.zero;
                attackEndedOnGround = true;
            }
        }
    }

    private void OnCollisionExit2D(Collision2D collision)
    {
        if (collision.gameObject.CompareTag("Ground"))
        {
            isGrounded = false;
            animator.SetBool("isGrounded", false);
        }
    }
}