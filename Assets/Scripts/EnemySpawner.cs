using System.Collections;
using UnityEngine;

public class EnemySpawner : MonoBehaviour
{
    public GameObject enemyPrefab; // Prefab netop√Ωra
    public Transform[] spawnPoints; // Pole v√≠ce spawn point≈Ø
    public float initialSpawnInterval = 5f; // Prvn√≠ interval spawnov√°n√≠
    public float minSpawnInterval = 2f; // Minim√°ln√≠ mo≈æn√Ω interval
    public float spawnReductionRate = 0.95f; // Zkracov√°n√≠ intervalu

    public int enemyBaseHP = 1;
    public float hpIncreaseInterval = 10f; // Zv√Ω≈°en√≠ HP ka≈æd√Ωch X sekund

    private float currentSpawnInterval;
    private int currentEnemyHP;

    private void Start()
    {
        currentSpawnInterval = initialSpawnInterval;
        currentEnemyHP = enemyBaseHP;

        StartCoroutine(SpawnEnemies());
        StartCoroutine(IncreaseEnemyHPOverTime());
    }

    IEnumerator SpawnEnemies()
    {
        while (true)
        {
            yield return new WaitForSeconds(currentSpawnInterval);

            if (spawnPoints.Length > 0) // Ovƒõ≈ôen√≠, ≈æe existuj√≠ spawnery
            {
                // üîÑ **Vybere n√°hodnƒõ 1 spawn bod**
                Transform spawnPoint = spawnPoints[Random.Range(0, spawnPoints.Length)];
                SpawnEnemyAt(spawnPoint);
            }
            else
            {
                Debug.LogWarning("‚ö†Ô∏è ≈Ω√°dn√© spawnovac√≠ body nejsou nastaveny!");
            }

            // ‚úÖ Redukce intervalu pro vy≈°≈°√≠ obt√≠≈ænost
            currentSpawnInterval = Mathf.Max(minSpawnInterval, currentSpawnInterval * spawnReductionRate);
        }
    }

    void SpawnEnemyAt(Transform spawnPoint)
    {
        GameObject newEnemy = Instantiate(enemyPrefab, spawnPoint.position, Quaternion.identity);
        newEnemy.SetActive(true);

        // ‚úÖ P≈ôi≈ôad√≠ nep≈ô√≠teli spr√°vn√© HP
        EnemyHealth enemyHealth = newEnemy.GetComponent<EnemyHealth>();
        if (enemyHealth != null)
        {
            enemyHealth.SetMaxHP(currentEnemyHP);
        }
    }

    IEnumerator IncreaseEnemyHPOverTime()
    {
        while (true)
        {
            yield return new WaitForSeconds(hpIncreaseInterval);
            currentEnemyHP++;
            Debug.Log("‚¨ÜÔ∏è Zv√Ω≈°en√© HP nep≈ô√°tel na: " + currentEnemyHP);
        }
    }
}